{"version":3,"file":"static/js/801.52cf8dcd.chunk.js","mappings":"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","sources":["components/CastItem/CastItem.styled.js","components/CastItem/CastItem.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding-bottom: ${p => p.theme.space[3]}px;\n  width: calc((100% - 5 * 32px) / 6);\n  background-color: ${p => p.theme.colors.white};\n  box-shadow: ${p => p.theme.shadows.secondary};\n`;\n\nexport const Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const Name = styled.p`\n  margin-top: ${p => p.theme.space[3]}px;\n  padding: 0 ${p => p.theme.space[3]}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.33;\n  text-align: center;\n\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Character = styled.p`\n  margin-top: ${p => p.theme.space[3]}px;\n  padding: 0 ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  text-align: center;\n\n  color: ${p => p.theme.colors.text};\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport imgPlaceholder from '../../images/imgPlaceholder.png';\nimport { Item, Image, Name, Character } from './CastItem.styled';\n\nexport const CastItem = ({ castItem }) => {\n  const { name, character, profile_path } = castItem;\n  return (\n    <Item>\n      <Box height=\"250px\">\n        <Image\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w400/${profile_path}`\n              : imgPlaceholder\n          }\n          alt=\"Profile photo\"\n        />\n      </Box>\n\n      <Name>{name ? name : 'Name'}</Name>\n      <Character>{character ? character : 'Character'}</Character>\n    </Item>\n  );\n};\n\nCastItem.propTypes = {\n  castItem: PropTypes.shape({\n    name: PropTypes.string,\n    character: PropTypes.string,\n    profile_path: PropTypes.string || null,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport { CastItem } from 'components/CastItem/CastItem';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <Box display=\"flex\" gridGap={5} flexWrap=\"wrap\" mt={4} as=\"ul\">\n      {cast?.map(item => (\n        <CastItem key={item.id} castItem={item} />\n      ))}\n    </Box>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      character: PropTypes.string,\n      profile_path: PropTypes.string || null,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { CastList } from 'components/CastList/CastList';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const cast = await getCredits(movieId);\n        setMovieCast(cast);\n      } catch (error) {\n        setError('Something went wrong. Please, try again later!');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <p>{error}</p>}\n      {movieCast.length > 0 && <CastList cast={movieCast} />}\n    </>\n  );\n};\n\nexport default Cast;\n","import { FiLoader } from 'react-icons/fi';\nimport styled, { keyframes } from 'styled-components';\n\nconst loaderAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LoaderBackdrop = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.2);\n`;\n\nexport const LoaderStyled = styled(FiLoader)`\n  fill: ${p => p.theme.colors.text};\n  width: 100px;\n  height: 100px;\n  animation: ${loaderAnimation} 1500ms linear infinite;\n`;\n","import { LoaderStyled, LoaderBackdrop } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderBackdrop>\n      <LoaderStyled />\n    </LoaderBackdrop>\n  );\n};\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '84c663b0d9ed75aa92613d5f25b42077';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const getCredits = async movieId => {\n  const { data } = await instance.get(`movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`movie/${movieId}/reviews`);\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\ngetMovieDetails.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\ngetCredits.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\ngetReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\ngetSearchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n"],"names":["Item","styled","p","theme","space","colors","white","shadows","secondary","Image","Name","fontWeights","bold","fontSizes","m","text","Character","CastItem","castItem","name","character","profile_path","Box","height","src","imgPlaceholder","alt","CastList","cast","display","gridGap","flexWrap","mt","as","map","item","id","useState","movieCast","setMovieCast","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchCast","getCredits","Loader","length","loaderAnimation","keyframes","LoaderBackdrop","LoaderStyled","FiLoader","instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getMovieDetails","getReviews","results","getSearchMovies","query","propTypes","PropTypes"],"sourceRoot":""}