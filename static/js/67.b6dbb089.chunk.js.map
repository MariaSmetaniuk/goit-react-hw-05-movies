{"version":3,"file":"static/js/67.b6dbb089.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","services/api.jsx"],"sourcesContent":["import { FiLoader } from 'react-icons/fi';\nimport styled, { keyframes } from 'styled-components';\n\nconst loaderAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LoaderBackdrop = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.2);\n`;\n\nexport const LoaderStyled = styled(FiLoader)`\n  fill: ${p => p.theme.colors.text};\n  width: 100px;\n  height: 100px;\n  animation: ${loaderAnimation} 1500ms linear infinite;\n`;\n","import { LoaderStyled, LoaderBackdrop } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderBackdrop>\n      <LoaderStyled />\n    </LoaderBackdrop>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Item = styled.li`\n  width: calc((100% - 3 * 32px) / 4);\n  background-color: ${p => p.theme.colors.white};\n  box-shadow: ${p => p.theme.shadows.secondary};\n  transition: transform 200ms linear;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const Title = styled.p`\n  display: flex;\n  align-items: center;\n  padding: 0 ${p => p.theme.space[3]}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.33;\n  text-transform: uppercase;\n  text-align: center;\n  color: ${p => p.theme.colors.text};\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Box } from 'components/Box';\nimport { Item, Image, Title, ItemLink } from './MovieItem.styled';\n\nexport const MovieItem = ({ movie }) => {\n  const { id, title, poster_path } = movie;\n  const location = useLocation();\n\n  return (\n    <Item>\n      <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n        <Box height=\"350px\">\n          <Image\n            src={`https://image.tmdb.org/t/p/w400/${poster_path}`}\n            alt=\"film poster\"\n          />\n        </Box>\n        <Box\n          display=\"flex\"\n          alingItems=\"center\"\n          justifyContent=\"center\"\n          height=\"75px\"\n        >\n          <Title>{title}</Title>\n        </Box>\n      </ItemLink>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <Box display=\"flex\" gridGap={5} flexWrap=\"wrap\" as=\"ul\">\n      {movies?.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </Box>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 450px;\n  background-color: ${p => p.theme.colors.muted};\n  overflow: hidden;\n  box-shadow: ${p => p.theme.shadows.secondary};\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 48px;\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.text};\n  background-color: ${p => p.theme.colors.muted};\n  border: none;\n  outline: none;\n  padding-left: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 48px;\n  border: none;\n  opacity: 0.6;\n  background-color: ${p => p.theme.colors.line};\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaSearch } from 'react-icons/fa';\nimport { Form, Input, SearchButton, ButtonLabel } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchQuery = query.trim();\n    console.log(searchQuery);\n\n    if (searchQuery !== '') {\n      onSubmit(searchQuery);\n    }\n  };\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    setQuery(value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        autocomplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={handleChange}\n      />\n      <SearchButton type=\"submit\">\n        <FaSearch />\n        <ButtonLabel>Search</ButtonLabel>\n      </SearchButton>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Box } from 'components/Box';\n\nconst MoviesPage = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  // загрузка фільмів при зміні query\n  useEffect(() => {\n    if (query === '') return;\n    const fetchSearchMovies = async () => {\n      try {\n        setLoading(true);\n\n        const data = await getSearchMovies(query);\n        if (data.results.length === 0) {\n          setError(\n            `Sorry, there are no movies matching ${query}. Please try again!`\n          );\n          setSearchMovies([]);\n          return;\n        }\n\n        setSearchMovies(data.results);\n      } catch (error) {\n        setError('Something went wrong. Please, try again later!');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSearchMovies();\n  }, [query]);\n\n  // при сабміті форми записую searchQuery в параметри пошукового рядка\n  const handleSubmit = searchQuery => {\n    setSearchParams({ query: searchQuery });\n    setError(null);\n  };\n\n  return (\n    <main>\n      {loading && <Loader />}\n      <SearchForm onSubmit={handleSubmit} />\n      <Box mt={5}>\n        {error && <p>{error}</p>}\n        {searchMovies.length > 0 && <MoviesList movies={searchMovies} />}\n      </Box>\n    </main>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '84c663b0d9ed75aa92613d5f25b42077';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const getCredits = async movieId => {\n  const { data } = await instance.get(`movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`movie/${movieId}/reviews`);\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\ngetMovieDetails.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\ngetCredits.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\ngetReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\ngetSearchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n"],"names":["loaderAnimation","keyframes","LoaderBackdrop","styled","LoaderStyled","FiLoader","p","theme","colors","text","Loader","ItemLink","Link","Item","white","shadows","secondary","Image","Title","space","fontWeights","bold","fontSizes","m","MovieItem","movie","id","title","poster_path","location","useLocation","to","state","from","Box","height","src","alt","display","alingItems","justifyContent","MoviesList","movies","gridGap","flexWrap","as","map","Form","muted","Input","SearchButton","line","ButtonLabel","SearchForm","onSubmit","useState","query","setQuery","e","preventDefault","searchQuery","trim","console","log","type","autocomplete","autoFocus","placeholder","value","onChange","currentTarget","searchMovies","setSearchMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchMovies","getSearchMovies","data","results","length","mt","instance","axios","baseURL","params","api_key","getTrendingMovies","getMovieDetails","movieId","getCredits","cast","getReviews","propTypes","PropTypes"],"sourceRoot":""}